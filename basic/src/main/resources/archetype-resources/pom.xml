<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- ====================================================================== -->
    <!-- Root project configuration

        Contains:
        - Repositories and plugin repositories configuration
        - Dependency and plugin management
        - Project properties setup

        Entry point for project build and deployment:

            To deploy whole project use:
                mvn clean install -PinstallPackage

            To install single bundle user in bundle project home:
                mvn clean install -PinstallBundle

            You can override deployment configuration e.g.
                mvn -Dsling.port=4503 clean install

            Default configuration can be found in properties section
    -->
    <!-- ====================================================================== -->

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>pom</packaging>
    <name>${artifactName} - Application Build Project</name>
    <description>Root WCMS project for ${artifactName}</description>

    <modules>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <internal.maven.server>http://repo1.maven.org/maven2</internal.maven.server>
        <vendor.name>YOUR COMPANY NAME</vendor.name>
        <java.language.level>1.8</java.language.level>
        <cq.version>6.4</cq.version>
        <!-- Sling plugin configuration -->
        <sling.host>http://localhost</sling.host>
        <sling.port>4502</sling.port>
        <sling.server>${sling.host}:${sling.port}</sling.server>
        <sling.user>admin</sling.user>
        <sling.password>admin</sling.password>
        <sling.bundles.install.path>/apps/${appsFolderName}/install</sling.bundles.install.path>
        <!-- Testing configuration -->
        <junit.version>4.12</junit.version>
        <powermock.version>1.6.5</powermock.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Java APIs -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.scr.annotations</artifactId>
                <version>1.9.6</version>
                <scope>provided</scope>
            </dependency>

            <!-- CQ, Adobe, Sling, JCR dependencies -->
            <dependency>
                <groupId>com.yurishchev.aem</groupId>
                <artifactId>aem-dependencies</artifactId>
                <version>${cq.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>3.0.1</version>
            </dependency>

            <!-- Other -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>18.0</version>
            </dependency>
            <dependency>
                <groupId>com.day.commons</groupId>
                <artifactId>day-commons-jstl</artifactId>
                <version>1.1.4</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>3rd-party.releases.adobe</id>
            <name>Adobe Basel Public Repository</name>
            <url>http://repo.adobe.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>3rd-party.releases.adobe</id>
            <name>Adobe Basel Public Repository</name>
            <url>http://repo.adobe.com/nexus/content/groups/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-scr-plugin</artifactId>
                    <version>1.17.0</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-simple</artifactId>
                            <version>1.7.25</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.sling</groupId>
                    <artifactId>maven-sling-plugin</artifactId>
                    <version>2.1.0</version>
                </plugin>
                <plugin>
                    <groupId>com.day.jcr.vault</groupId>
                    <artifactId>content-package-maven-plugin</artifactId>
                    <version>0.0.24</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.language.level}</source>
                    <target>${java.language.level}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>